{
  "rules": {
    ".read": "auth != null",
    ".write": "auth != null",
    "classes": {
      ".indexOn": ["class_name", "lecturer"],
      "$class_id": {
        ".validate": "newData.hasChildren(['class_name', 'lecturer', 'schedules'])",
        "class_name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "lecturer": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "schedules": {
          "$schedule_id": {
            ".validate": "newData.hasChildren(['day_of_week', 'start_time', 'end_time', 'room_number'])",
            "day_of_week": {
              ".validate": "newData.isString() && newData.val().matches(/^(Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday)$/)"
            },
            "start_time": {
              ".validate": "newData.isString() && newData.val().matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/)"
            },
            "end_time": {
              ".validate": "newData.isString() && newData.val().matches(/^([01]?[0-9]|2[0-3]):[0-5][0-9]$/)"
            },
            "room_number": {
              ".validate": "newData.isString()"
            }
          }
        },
        "enrolled_students": {
          "$student_index": {
            ".validate": "newData.isString()"
          }
        }
      }
    },
    "students": {
      ".indexOn": ["name", "fingerprint_id"],
      "$student_id": {
        ".validate": "newData.hasChildren(['name', 'fingerprint_id'])",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "fingerprint_id": {
          ".validate": "newData.isNumber() && newData.val() > 0",
          // Ensure uniqueness of fingerprint IDs
          ".validate": "!root.child('students').orderByChild('fingerprint_id').equalTo(newData.val()).exists() || root.child('students').orderByChild('fingerprint_id').equalTo(newData.val()).hasChild($student_id)"
        },
        "enrolled_classes": {
          "$class_index": {
            ".validate": "newData.isString() && root.child('classes').child(newData.val()).exists()"
          }
        }
      }
    },
    "attendance": {
      "$class_id": {
        ".indexOn": ["student_id", "timestamp"],
        "$date": {
          "$student_id": {
            ".validate": "newData.hasChildren(['student_id', 'class_id', 'timestamp'])",
            "attendance_id": {
              ".validate": "newData.isString()"
            },
            "student_id": {
              ".validate": "newData.val() === $student_id && root.child('students').child(newData.val()).exists()"
            },
            "class_id": {
              ".validate": "newData.val() === $class_id && root.child('classes').child(newData.val()).exists()"
            },
            "timestamp": {
              ".validate": "newData.isString() && newData.val().matches(/^\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}$/)"
            },
            "status": {
              ".validate": "newData.isString() && newData.val().matches(/^(present|absent|late)$/)"
            }
          }
        }
      }
    }
  }
}